#version 440 core

in vec2 fTexcoord;

uniform sampler2D uScene;
uniform sampler2D uBloomBlur;

layout(std140, binding=0) uniform BloomData
{
	float exposure;
};

layout(location = 0) out vec4 oColor;

void main()
{
	const float gamma = 2.2;
    vec3 bloomColor = texture(uBloomBlur, fTexcoord).rgb;

	// additive blending
	vec3 hdrColor = texture(uScene, fTexcoord).rgb + bloomColor;

    // tone mapping
    vec3 result = vec3(1.0) - exp(-hdrColor * exposure);

    // also gamma correct while we're at it       
    result = pow(result, vec3(1.0 / gamma));

	// final output
    oColor = vec4(result, 1.0);
}
